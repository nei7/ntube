// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: user.sql

package db

import (
	"context"
)

const CreateUser = `-- name: CreateUser :one
INSERT INTO users (
    email,
    password
) VALUES (
    $1,
    $2
) RETURNING id, email, password
`

type CreateUserParams struct {
	Email    string
	Password string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, CreateUser, arg.Email, arg.Password)
	var i User
	err := row.Scan(&i.ID, &i.Email, &i.Password)
	return i, err
}

const GetUser = `-- name: GetUser :one
SELECT id, email, password FROM users WHERE email = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, GetUser, email)
	var i User
	err := row.Scan(&i.ID, &i.Email, &i.Password)
	return i, err
}
